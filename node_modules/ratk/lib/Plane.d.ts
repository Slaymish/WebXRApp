/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/// <reference types="webxr" />
import { Mesh, WebXRManager } from 'three';
import { TransformObject } from './TransformObject';
export declare class Plane extends TransformObject {
    private _xrPlane;
    needsUpdate: boolean;
    lastUpdatedByRATK: number;
    planeMesh?: Mesh;
    boundingRectangleWidth: number;
    boundingRectangleHeight: number;
    constructor(xrPlane: XRPlane);
    get xrPlane(): XRPlane;
    get orientation(): XRPlaneOrientation;
    get lastUpdated(): number;
    get semanticLabel(): any;
}
export declare const updatePlane: (plane: Plane, xrManager: WebXRManager) => void;
//# sourceMappingURL=Plane.d.ts.map