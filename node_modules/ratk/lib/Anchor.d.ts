/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/// <reference types="webxr" />
import { Quaternion, Vector3, WebXRManager } from 'three';
import { TransformObject } from './TransformObject';
export declare class Anchor extends TransformObject {
    private _xrAnchor;
    persistenceDeletionPending: boolean;
    anchorID?: string;
    constructor(xrAnchor: XRAnchor, uuid?: string);
    get xrAnchor(): XRAnchor;
    get isPersistent(): boolean;
    makePersistent(): Promise<void>;
    makeNonPersistent(): Promise<void>;
}
export declare const createAnchorFromTransform: (xrManager: WebXRManager, position: Vector3, quaternion: Quaternion) => Promise<Anchor>;
export declare const restoreAnchorFromUUID: (xrManager: WebXRManager, uuid: string) => Promise<Anchor>;
export declare const deleteAnchorPersistence: (anchor: Anchor, xrManager: WebXRManager) => Promise<void>;
//# sourceMappingURL=Anchor.d.ts.map