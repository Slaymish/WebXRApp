/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/// <reference types="webxr" />
import { Mesh, WebXRManager } from 'three';
import { TransformObject } from './TransformObject';
export declare class RMesh extends TransformObject {
    private _xrMesh;
    needsUpdate: boolean;
    lastUpdatedByRATK: number;
    meshMesh?: Mesh;
    constructor(xrMesh: XRMesh);
    get xrMesh(): XRMesh;
    get lastUpdated(): number;
    get semanticLabel(): string | undefined;
}
export declare const updateMesh: (mesh: RMesh, xrManager: WebXRManager) => void;
//# sourceMappingURL=Mesh.d.ts.map